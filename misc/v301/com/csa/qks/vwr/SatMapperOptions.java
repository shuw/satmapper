/*
 * SatMapperOptions.java
 *
 * Created on March 11, 2002, 2:02 PM
 */

/**
 *
 * @author  TWu
 */
package com.csa.qks.vwr;
public class SatMapperOptions extends javax.swing.JFrame {
    SatMapper parent;
    int updateIntervalSliderValue = 2000;
    
    /** Creates new form SatMapperOptions */
    public SatMapperOptions(SatMapper parent) {
        super("SatMapper Options");
        this.parent = parent;
        initComponents();
        updateIntervalSlider.setEnabled(false);
        updateIntervallabel.setEnabled(false);
        resetTimeCheckBox.setEnabled(false);
        
        
        setLocal(false);
        
        if ( !parent.langEng) {}
        
    }
    
    public void show() {
        super.show();
        
        if ( parent.isLocal ) {
            localCheckBox.setSelected(true);
            setLocal(true);
        }
        else {
            setLocal(false);
            localCheckBox.setSelected(true);
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        languageButtonGroup = new javax.swing.ButtonGroup();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        addPlaceButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        applyButton = new javax.swing.JButton();
        nameTextField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        longLabel = new javax.swing.JLabel();
        longTextField = new javax.swing.JTextField();
        latTextField = new javax.swing.JTextField();
        latLabel = new javax.swing.JLabel();
        showCloudsCheckBox = new javax.swing.JCheckBox();
        nightModeCheckBox = new javax.swing.JCheckBox();
        frenchRadioButton = new javax.swing.JRadioButton();
        englishRadioButton = new javax.swing.JRadioButton();
        message = new javax.swing.JLabel();
        showGridCheckBox = new javax.swing.JCheckBox();
        updateIntervalSlider = new javax.swing.JSlider();
        updateIntervallabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        showRangeCheckBox = new javax.swing.JCheckBox();
        followSatCheckBox = new javax.swing.JCheckBox();
        helpTextLabel = new javax.swing.JLabel();
        resetTimeCheckBox = new javax.swing.JCheckBox();
        showPathCheckBox = new javax.swing.JCheckBox();
        localCheckBox = new javax.swing.JCheckBox();
        
        
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        
        setTitle("Options");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        
        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        
        getContentPane().add(okButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 300, -1, -1));
        
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        
        getContentPane().add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, -1, -1));
        
        addPlaceButton.setText("add location");
        addPlaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlaceButtonActionPerformed(evt);
            }
        });
        
        getContentPane().add(addPlaceButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));
        
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(305, 104, -1, -1));
        
        applyButton.setText("Apply");
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });
        
        getContentPane().add(applyButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 300, -1, -1));
        
        nameTextField.setText("place");
        nameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextFieldActionPerformed(evt);
            }
        });
        
        getContentPane().add(nameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 70, -1));
        
        nameLabel.setText("Name:");
        getContentPane().add(nameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));
        
        longLabel.setText("Longitude:");
        getContentPane().add(longLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));
        
        longTextField.setText("0");
        longTextField.setPreferredSize(new java.awt.Dimension(60, 20));
        longTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                longTextFieldMouseEntered(evt);
            }
        });
        
        getContentPane().add(longTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, -1, -1));
        
        latTextField.setText("0");
        latTextField.setPreferredSize(new java.awt.Dimension(60, 20));
        latTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                latTextFieldMouseEntered(evt);
            }
        });
        
        getContentPane().add(latTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, -1, -1));
        
        latLabel.setText("Latitude:");
        getContentPane().add(latLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));
        
        showCloudsCheckBox.setText("Show Clouds");
        showCloudsCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                showCloudsCheckBoxStateChanged(evt);
            }
        });
        
        showCloudsCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                showCloudsCheckBoxItemStateChanged(evt);
            }
        });
        
        showCloudsCheckBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                showCloudsCheckBoxMouseEntered(evt);
            }
        });
        
        getContentPane().add(showCloudsCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, -1, 20));
        
        nightModeCheckBox.setText("Night Mode");
        nightModeCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nightModeCheckBoxActionPerformed(evt);
            }
        });
        
        nightModeCheckBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nightModeCheckBoxMouseEntered(evt);
            }
        });
        
        getContentPane().add(nightModeCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, -1, 20));
        
        frenchRadioButton.setText("Francais");
        languageButtonGroup.add(frenchRadioButton);
        frenchRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frenchRadioButtonActionPerformed(evt);
            }
        });
        
        getContentPane().add(frenchRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, -1, -1));
        
        englishRadioButton.setSelected(true);
        englishRadioButton.setText("English");
        languageButtonGroup.add(englishRadioButton);
        englishRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                englishRadioButtonActionPerformed(evt);
            }
        });
        
        getContentPane().add(englishRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 300, -1, -1));
        
        message.setFont(new java.awt.Font("Dialog", 0, 12));
        message.setText("add your home to the map");
        getContentPane().add(message, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));
        
        showGridCheckBox.setSelected(true);
        showGridCheckBox.setText("Show Grid");
        getContentPane().add(showGridCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, -1, 20));
        
        updateIntervalSlider.setMaximum(10000);
        updateIntervalSlider.setMinimum(50);
        updateIntervalSlider.setValue(2000);
        updateIntervalSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                updateIntervalSliderStateChanged(evt);
            }
        });
        
        getContentPane().add(updateIntervalSlider, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 270, 30));
        
        updateIntervallabel.setText("Update Interval for Satellite Movements");
        getContentPane().add(updateIntervallabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, -1, -1));
        
        jLabel3.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel3.setText("50ms");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, -1));
        
        jLabel4.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel4.setText("10000ms");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 250, -1, -1));
        
        showRangeCheckBox.setSelected(true);
        showRangeCheckBox.setText("Show Range of Satellites");
        showRangeCheckBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                showRangeCheckBoxMouseEntered(evt);
            }
        });
        
        getContentPane().add(showRangeCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, -1, 20));
        
        followSatCheckBox.setText("Follow Selected Satellite");
        followSatCheckBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                followSatCheckBoxMouseEntered(evt);
            }
        });
        
        getContentPane().add(followSatCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 140, -1, 20));
        
        helpTextLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        getContentPane().add(helpTextLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 370, 20));
        
        resetTimeCheckBox.setText("Reset clock to current time");
        getContentPane().add(resetTimeCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 210, -1, -1));
        
        showPathCheckBox.setText("Show Path of Satellite");
        showPathCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPathCheckBoxActionPerformed(evt);
            }
        });
        
        getContentPane().add(showPathCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, -1));
        
        localCheckBox.setText("Perform calculations on Local Machine");
        localCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                localCheckBoxActionPerformed(evt);
            }
        });
        
        localCheckBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                localCheckBoxMouseEntered(evt);
            }
        });
        
        getContentPane().add(localCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, 20));
        
        pack();
    }//GEN-END:initComponents
    
    private void localCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_localCheckBoxActionPerformed
        if (localCheckBox.isSelected()) setLocal(true);
        else  setLocal(false);
    }//GEN-LAST:event_localCheckBoxActionPerformed
    
    private void localCheckBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_localCheckBoxMouseEntered
        helpTextLabel.setText("selected if server is down or needed for additional features");
    }//GEN-LAST:event_localCheckBoxMouseEntered
    
    private void showPathCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPathCheckBoxActionPerformed
        
    }//GEN-LAST:event_showPathCheckBoxActionPerformed
    
    private void nightModeCheckBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nightModeCheckBoxMouseEntered
        helpTextLabel.setText("uses a map of the earth at night");
    }//GEN-LAST:event_nightModeCheckBoxMouseEntered
    
    private void showRangeCheckBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showRangeCheckBoxMouseEntered
        helpTextLabel.setText("shows the the range circle in which satellite is visible");
    }//GEN-LAST:event_showRangeCheckBoxMouseEntered
    
    private void followSatCheckBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_followSatCheckBoxMouseEntered
        helpTextLabel.setText("always centers the screen on the selected Satellite");
    }//GEN-LAST:event_followSatCheckBoxMouseEntered
    
    private void showCloudsCheckBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showCloudsCheckBoxMouseEntered
        helpTextLabel.setText("shows clouds in zoom levels below 2");
    }//GEN-LAST:event_showCloudsCheckBoxMouseEntered
    
    private void latTextFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_latTextFieldMouseEntered
        helpTextLabel.setText("for south, use a negative number");
    }//GEN-LAST:event_latTextFieldMouseEntered
    
    private void longTextFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_longTextFieldMouseEntered
        helpTextLabel.setText("for west, use a negative number");
    }//GEN-LAST:event_longTextFieldMouseEntered
    
    private void updateIntervalSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_updateIntervalSliderStateChanged
        updateIntervalSliderValue = updateIntervalSlider.getValue();
        if (parent.isLocal) {
            updateIntervallabel.setText("Update Interval: " + updateIntervalSliderValue + "ms");
            updateIntervalSliderValue = updateIntervalSlider.getValue();
        }
        else updateIntervallabel.setText("Only Local Version's update frequency can be changed");
    }//GEN-LAST:event_updateIntervalSliderStateChanged
    
    private void frenchRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frenchRadioButtonActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_frenchRadioButtonActionPerformed
    
    private void nightModeCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nightModeCheckBoxActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_nightModeCheckBoxActionPerformed
    
    private void showCloudsCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_showCloudsCheckBoxItemStateChanged
        // Add your handling code here
    }//GEN-LAST:event_showCloudsCheckBoxItemStateChanged
    
    private void showCloudsCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_showCloudsCheckBoxStateChanged
        // Add your handling code here:
    }//GEN-LAST:event_showCloudsCheckBoxStateChanged
    
    private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_nameTextFieldActionPerformed
    
    private void addPlaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlaceButtonActionPerformed
        double longitude, latitude;  // The user's number.
        Double d;
        try {
            d = new Double( longTextField.getText() );
            longitude = d.doubleValue();
        }
        catch (NumberFormatException e) {
            message.setText("\"" + longTextField.getText() +
            "\" must be a number.");
            longTextField.selectAll();
            longTextField.requestFocus();
            return;
        }
        
        try {
            d = new Double( latTextField.getText() );
            latitude = d.doubleValue();
        }
        catch (NumberFormatException e) {
            message.setText("\"" + latTextField.getText() +
            "\" must be a number.");
            latTextField.selectAll();
            latTextField.requestFocus();
            return;
        }
        
        if ( longitude > 180 || longitude < -180)
            message.setText("Longitude must be  (-180 - 180)");
        else if ( latitude > 90 || latitude < -90)
            message.setText("Latitude must be  (-90 - 90)");
        else {
            parent.addPlace( latitude,
            longitude,
            nameTextField.getText(), true            );
        }
        parent.repaint();
        
    }//GEN-LAST:event_addPlaceButtonActionPerformed
    
    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        applyChanges();
    }//GEN-LAST:event_applyButtonActionPerformed
    
    private void englishRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_englishRadioButtonActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_englishRadioButtonActionPerformed
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.hide();
    }//GEN-LAST:event_cancelButtonActionPerformed
    
    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        //        if (evt.getStateChange() )
        //
        //            parent.showClouds = true;
        //        evt.
        //
        //        else parent.showClouds = false;
        
        applyChanges();
        
        this.hide();
        
        
    }//GEN-LAST:event_okButtonActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new SatMapperOptions(new SatMapper()).show();
    }
    
    
    private void applyChanges() {
        if ( showCloudsCheckBox.isSelected() )
            parent.removeClouds = false;
        else
            parent.removeClouds = true;
        
        if ( nightModeCheckBox.isSelected() && parent.nightTransition == 0)
            parent.switchNightMode();
        else if ( !nightModeCheckBox.isSelected() && parent.nightTransition == 1)
            parent.switchNightMode();
        
        if ( englishRadioButton.isSelected() )
            parent.langEng = true;
        else if ( frenchRadioButton.isSelected() )
            parent.langEng = false;
        else
            System.out.println("No Language Selected");
        
        if ( showGridCheckBox.isSelected() ) {
            parent.setWindowSize( parent.ScreenX - 30, parent.ScreenY - 15);
            parent.showGrid = true;
        }
        else {
            parent.setWindowSize( parent.ScreenX, parent.ScreenY);
            parent.showGrid = false;
        }
        
        if ( showRangeCheckBox.isSelected() )
            parent.showRange = true;
        else
            parent.showRange = false;
        
        if ( followSatCheckBox.isSelected() )
            parent.followSat = true;
        else
            parent.followSat = false;
        
        if ( resetTimeCheckBox.isSelected() ) {
            parent.myData.timeJump = 0;
            resetTimeCheckBox.setSelected(false);
        }
        
        if ( showPathCheckBox.isSelected() ) {
            if ( !parent.isLocal ){ WarningFrame warnLocal = new WarningFrame(); warnLocal.show(); }
            
            parent.showPath = true;
            parent.isLocal = true;
        }
        else {
            parent.showPath = false;
            try {
                parent.startReceiving();
            } catch (Exception e) {e.printStackTrace();}
        }
        
        parent.updateInterval = updateIntervalSliderValue;
        
        parent.repaint();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup languageButtonGroup;
    private javax.swing.JButton okButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton addPlaceButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton applyButton;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel longLabel;
    private javax.swing.JTextField longTextField;
    private javax.swing.JTextField latTextField;
    private javax.swing.JLabel latLabel;
    private javax.swing.JCheckBox showCloudsCheckBox;
    private javax.swing.JCheckBox nightModeCheckBox;
    private javax.swing.JRadioButton frenchRadioButton;
    private javax.swing.JRadioButton englishRadioButton;
    private javax.swing.JLabel message;
    private javax.swing.JCheckBox showGridCheckBox;
    private javax.swing.JSlider updateIntervalSlider;
    private javax.swing.JLabel updateIntervallabel;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JCheckBox showRangeCheckBox;
    private javax.swing.JCheckBox followSatCheckBox;
    private javax.swing.JLabel helpTextLabel;
    private javax.swing.JCheckBox resetTimeCheckBox;
    private javax.swing.JCheckBox showPathCheckBox;
    private javax.swing.JCheckBox localCheckBox;
    // End of variables declaration//GEN-END:variables
    public void setLangFrench() {
        
        
        
    }
    
    public void setLangEnglish() {
        
    }
    
    public void setLocal(boolean isEnabled) {
        showPathCheckBox.setEnabled(isEnabled);
        updateIntervalSlider.setEnabled(isEnabled);
        updateIntervallabel.setEnabled(isEnabled);
        resetTimeCheckBox.setEnabled(isEnabled);
        jLabel3.setEnabled(isEnabled);
        jLabel4.setEnabled(isEnabled);
    }
}
