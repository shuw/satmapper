/*
 * panelTNC.java
 *
 * Created on July 25, 2001, 5:13 PM
 */

package ca.gc.space.quicksat.ground.tnc;

import ca.gc.space.quicksat.ground.client.*;
import ca.gc.space.quicksat.ground.ax25.*;
import ca.gc.space.quicksat.ground.util.*;

/**
 *
 * @author  jfcusson
 */ 
public class PanelTNC extends javax.swing.JPanel {
ServerLink serverLink = null;
Log log = null;
    
    /** Creates new form panelTNC */
    public PanelTNC( Log log ) {
        initComponents();
        this.log = log;
        if( log == null ) log = new Log();
    }
    
    public void setServerLink( ServerLink serverLink ) {
        this.serverLink = serverLink;
    }
    
    //public void setAx25is( ax25.FrameInputStream ax25is ) {
    //    this.ax25is = ax25is;
    //}
    
    public void println( String message ) {
        txtTNC.append(message+"\n");
        txtTNC.setCaretPosition(txtTNC.getText().length());
        txtTNC.revalidate();        
    }
    public void print( String message ) {
        txtTNC.append(message);
        txtTNC.setCaretPosition(txtTNC.getText().length());
        txtTNC.revalidate();        
    }

    public void setDCD( boolean state ) {
        if( state ) lblDCD.setBackground(java.awt.Color.green);
        else        lblDCD.setBackground(java.awt.Color.gray);
    }
    public void setDSR( boolean state ) {
        if( state ) lblDSR.setBackground(java.awt.Color.green);
        else        lblDSR.setBackground(java.awt.Color.gray);
    }
    public void setCTS( boolean state ) {
        if( state ) lblCTS.setBackground(java.awt.Color.green);
        else        lblCTS.setBackground(java.awt.Color.gray);
    }
    public void setPortSpeed( int speed ) {
        lblPortSpeed.setText( ""+speed );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
            panelTNC = new javax.swing.JPanel();
            jPanel88 = new javax.swing.JPanel();
            btnTNCInit = new javax.swing.JButton();
            btnTNCDisableKISS = new javax.swing.JButton();
            btnToggleUnformattedMode = new javax.swing.JButton();
            jPanel2 = new javax.swing.JPanel();
            lblDCD = new javax.swing.JLabel();
            lblDSR = new javax.swing.JLabel();
            lblCTS = new javax.swing.JLabel();
            lblPortSpeed = new javax.swing.JLabel();
            jPanel153 = new javax.swing.JPanel();
            jScrollPane5 = new javax.swing.JScrollPane();
            txtTNC = new javax.swing.JTextArea();
            jPanel1 = new javax.swing.JPanel();
            txtToSend = new javax.swing.JTextField();
            btnSend = new javax.swing.JButton();
            
            setLayout(new java.awt.BorderLayout());
            
            panelTNC.setLayout(new javax.swing.BoxLayout(panelTNC, javax.swing.BoxLayout.Y_AXIS));
            
            jPanel88.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 1));
            
            jPanel88.setBorder(new javax.swing.border.TitledBorder(""));
            btnTNCInit.setText("Init TNC");
            btnTNCInit.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnTNCInitActionPerformed(evt);
                }
            });
            
            jPanel88.add(btnTNCInit);
            
            btnTNCDisableKISS.setText("Disable KISS mode");
            btnTNCDisableKISS.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnTNCDisableKISSActionPerformed(evt);
                }
            });
            
            jPanel88.add(btnTNCDisableKISS);
            
            btnToggleUnformattedMode.setText("Toggle Unformatted Mode");
            btnToggleUnformattedMode.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnToggleUnformattedModeActionPerformed(evt);
                }
            });
            
            jPanel88.add(btnToggleUnformattedMode);
            
            jPanel2.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
              lblDCD.setText("DCD");
              lblDCD.setForeground(java.awt.Color.darkGray);
              lblDCD.setBackground(java.awt.Color.gray);
              lblDCD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
              lblDCD.setPreferredSize(new java.awt.Dimension(35, 25));
              lblDCD.setMaximumSize(new java.awt.Dimension(60, 25));
              lblDCD.setOpaque(true);
              jPanel2.add(lblDCD);
              
              lblDSR.setText("DSR");
              lblDSR.setForeground(java.awt.Color.darkGray);
              lblDSR.setBackground(java.awt.Color.gray);
              lblDSR.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
              lblDSR.setPreferredSize(new java.awt.Dimension(35, 25));
              lblDSR.setMinimumSize(new java.awt.Dimension(10, 10));
              lblDSR.setMaximumSize(new java.awt.Dimension(60, 25));
              lblDSR.setOpaque(true);
              jPanel2.add(lblDSR);
              
              lblCTS.setText("CTS");
              lblCTS.setForeground(java.awt.Color.darkGray);
              lblCTS.setBackground(java.awt.Color.gray);
              lblCTS.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
              lblCTS.setPreferredSize(new java.awt.Dimension(35, 25));
              lblCTS.setMaximumSize(new java.awt.Dimension(60, 25));
              lblCTS.setOpaque(true);
              jPanel2.add(lblCTS);
              
              lblPortSpeed.setText("N/A");
              lblPortSpeed.setForeground(java.awt.Color.white);
              lblPortSpeed.setBackground(java.awt.Color.gray);
              lblPortSpeed.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
              lblPortSpeed.setPreferredSize(new java.awt.Dimension(60, 25));
              lblPortSpeed.setMaximumSize(new java.awt.Dimension(200, 25));
              lblPortSpeed.setOpaque(true);
              jPanel2.add(lblPortSpeed);
              
              jPanel88.add(jPanel2);
            
            panelTNC.add(jPanel88);
          
          jPanel153.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 1));
              
              jPanel153.setBorder(new javax.swing.border.TitledBorder(""));
              jScrollPane5.setPreferredSize(new java.awt.Dimension(600, 150));
              jScrollPane5.setViewportView(txtTNC);
              
              jPanel153.add(jScrollPane5);
            
            panelTNC.add(jPanel153);
          
          jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 1));
            
            jPanel1.setBorder(new javax.swing.border.LineBorder(java.awt.Color.black));
            txtToSend.setPreferredSize(new java.awt.Dimension(550, 21));
            txtToSend.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyTyped(java.awt.event.KeyEvent evt) {
                    txtToSendKeyTyped(evt);
                }
            });
            
            jPanel1.add(txtToSend);
            
            btnSend.setText("SEND");
            btnSend.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnSendActionPerformed(evt);
                }
            });
            
            jPanel1.add(btnSend);
            
            panelTNC.add(jPanel1);
          
          add(panelTNC, java.awt.BorderLayout.CENTER);
        
    }//GEN-END:initComponents

    private void txtToSendKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtToSendKeyTyped
        System.out.print(txtToSend.getText());
        if( (evt.getKeyChar() == '\n') || (evt.getKeyChar() == '\r') ){
            if( serverLink != null ) {
                serverLink.sendPacketToTnc( 
                             new String(txtToSend.getText()+"\r").getBytes());
            }
            txtToSend.setText("");
        }
        
    }//GEN-LAST:event_txtToSendKeyTyped

    private void btnToggleUnformattedModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToggleUnformattedModeActionPerformed
        //if( ax25is == null ) return;
        //if( ax25is.isUnformattedMode() )
        //    ax25is.setUnformattedMode( false );
        //else
        //    ax25is.setUnformattedMode( true );
        
        if( serverLink == null ) return;
        if( serverLink.isSpacecraftUnformatted() )
            serverLink.setSpacecraftUnformatted( false );
        else
            serverLink.setSpacecraftUnformatted( true );

    }//GEN-LAST:event_btnToggleUnformattedModeActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        if( serverLink != null ) {
            serverLink.sendPacketToTnc( 
                               new String(txtToSend.getText()+"\r").getBytes());
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnTNCDisableKISSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTNCDisableKISSActionPerformed

        if( serverLink != null ) {
            serverLink.sendPacketToTnc( Tnc.createDisableKissMessage() );
        }
        
    }//GEN-LAST:event_btnTNCDisableKISSActionPerformed

    private void btnTNCInitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTNCInitActionPerformed

        /*-----------------------------------------------*/
        /* specify the byte sequences for initialization */
        /*-----------------------------------------------*/
        byte[] seq1 = { (byte)0x0D, (byte)0x03,  (byte)0x03,  (byte)0x03,
        (byte)'K',  (byte)'I',   (byte)'S',   (byte)'S',
        (byte)' ',  (byte)'O',   (byte)'N',   (byte)0x0D };
        
        byte[] seq2 = { (byte)0x0D,
        (byte)'R', (byte)'E', (byte)'S',
        (byte)'T', (byte)'A', (byte)'R', (byte)'T',
        (byte)0x0D };
        
        /*--------------------*/
        /* Full Duplex if > 0 */
        /*--------------------*/
        byte[] seq3 = { (byte)Frame.KISS_FEND, 
                        (byte)Frame.KISS_FEND, (byte)0x05, (byte)0x01,
                        (byte)Frame.KISS_FEND, 
                        (byte)Frame.KISS_FEND };
        
        /*------------------------------*/
        /* P-Persist (255 = Aggressive) */
        /*------------------------------*/
        byte[] seq4 = { (byte)Frame.KISS_FEND, 
                        (byte)Frame.KISS_FEND, (byte)0x02, (byte)0xFF,
                        (byte)Frame.KISS_FEND };
                        
        /*----------*/
        /* Slottime */
        /*----------*/
        byte[] seq5 = { (byte)Frame.KISS_FEND, 
                        (byte)Frame.KISS_FEND, (byte)0x03, (byte)0x00,
                        (byte)Frame.KISS_FEND };
        
        /*------------------*/
        /* TXDelay * 10mSec */
        /*------------------*/
        byte[] seq6 = { (byte)Frame.KISS_FEND, 
                        (byte)Frame.KISS_FEND,
                        (byte)0x01, (byte)0x64,
                        (byte)Frame.KISS_FEND };
        
        try {
            /*-------------------------------------------*/
            /* transmit the sequences with proper timing */
            /*-------------------------------------------*/
            /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
            /*NOTE:WE HAVE TO PUT THE MESSAGE IN THE TNC OBJECT!!!!!*/
            /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/            
            serverLink.sendPacketToTnc(seq1); Thread.currentThread().sleep(2000);
            serverLink.sendPacketToTnc(seq2); Thread.currentThread().sleep(2000);
            serverLink.sendPacketToTnc(seq3); Thread.currentThread().sleep(200);
            serverLink.sendPacketToTnc(seq4); Thread.currentThread().sleep(200);
            serverLink.sendPacketToTnc(seq5); Thread.currentThread().sleep(200);
            serverLink.sendPacketToTnc(seq6); Thread.currentThread().sleep(200);
        }
        catch (Exception e) {
            System.out.println("An exception occurred while initializing the TNC...");
        }
        
//        System.out.println("RESET TNC DISABLED");
        
    }//GEN-LAST:event_btnTNCInitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panelTNC;
    private javax.swing.JPanel jPanel88;
    private javax.swing.JButton btnTNCInit;
    private javax.swing.JButton btnTNCDisableKISS;
    private javax.swing.JButton btnToggleUnformattedMode;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblDCD;
    private javax.swing.JLabel lblDSR;
    private javax.swing.JLabel lblCTS;
    private javax.swing.JLabel lblPortSpeed;
    private javax.swing.JPanel jPanel153;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea txtTNC;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtToSend;
    private javax.swing.JButton btnSend;
    // End of variables declaration//GEN-END:variables

}
