/*
 * PanelACS.java
 *
 * Created on July 25, 2001, 3:50 PM
 */

package ca.gc.space.quicksat.ground.control;

import javax.swing.*;
import ca.gc.space.quicksat.ground.client.*;
import ca.gc.space.quicksat.ground.satellite.*;
import ca.gc.space.quicksat.ground.control.*;
import ca.gc.space.quicksat.ground.util.*;

/*============================================================================*/
/** Implements a panel to control and monitor the ACS hardware.
  * @author  jfcusson                                                         */
/*============================================================================*/
public class PanelACS_cmd extends javax.swing.JPanel {
/*============================================================================*/
ServerLink  srvLnk               = null;
Satellite   sat                  = null;
Log         log                  = null;
boolean     justEditedWheelSpeed = false;
boolean     justEditedWheelTorque= false;
private final String LED_OFF="/ca/gc/space/quicksat/ground/images/led_off.gif";
private final String LED_GREEN_ON="/ca/gc/space/quicksat/ground/images/led_green_on.gif";
private final String LED_RED_ON="/ca/gc/space/quicksat/ground/images/led_red_on.gif";
private final String LED_WHITE="/ca/gc/space/quicksat/ground/images/led_white.gif";

    /*------------------------------------------------------------------------*/
    /** Creates new form PanelACS                                             */
    /*------------------------------------------------------------------------*/
    public PanelACS_cmd( Log log ) {
    /*------------------------------------------------------------------------*/
        initComponents();
        this.log = log;                
        if( this.log == null ) this.log = new Log();
    }
    
    /*========================================================================*/    
    /** Set the object that is in charge of managing the link with the ground
     *  station server.
     *  @param srvLnk ServerLink used to communicate with the server.     */
    /*========================================================================*/
    public void setServerLink( ServerLink srvLnk ) {
    /*========================================================================*/    
        this.srvLnk = srvLnk;
    }
    
    /*========================================================================*/
    /** Set the object representing the satellite that we want to communicate
     *  with, and understanding the format of the commands.
     *  @param sat Satellite object representing our satellite.               */
    /*========================================================================*/
    public void setSatellite( Satellite sat ) {
    /*========================================================================*/    
        this.sat = sat;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
            panelACS = new javax.swing.JPanel();
            panelACSPower = new javax.swing.JPanel();
            lblACSActivationMode = new javax.swing.JLabel();
            jPanel185 = new javax.swing.JPanel();
            btnACSON = new javax.swing.JButton();
            btnACSOFF = new javax.swing.JButton();
            panelWheel = new javax.swing.JPanel();
            jPanel210 = new javax.swing.JPanel();
            jPanel250 = new javax.swing.JPanel();
            btnWheelEnable = new javax.swing.JButton();
            btnWheelDisable = new javax.swing.JButton();
            jPanel251 = new javax.swing.JPanel();
            jPanel211 = new javax.swing.JPanel();
            jLabel122 = new javax.swing.JLabel();
            txtWheelSpeed = new javax.swing.JTextField();
            jLabel124 = new javax.swing.JLabel();
            jSeparator14 = new javax.swing.JSeparator();
            slidWheelSpeed = new javax.swing.JSlider();
            jLabel171 = new javax.swing.JLabel();
            jSeparator15 = new javax.swing.JSeparator();
            btnWheelSpeed = new javax.swing.JButton();
            jPanel212 = new javax.swing.JPanel();
            jLabel123 = new javax.swing.JLabel();
            txtWheelTorque = new javax.swing.JTextField();
            jLabel125 = new javax.swing.JLabel();
            jSeparator16 = new javax.swing.JSeparator();
            slidWheelTorque = new javax.swing.JSlider();
            jLabel172 = new javax.swing.JLabel();
            jSeparator17 = new javax.swing.JSeparator();
            btnWheelTorque = new javax.swing.JButton();
            panelTorqueRods = new javax.swing.JPanel();
            panelTorqueRodX = new javax.swing.JPanel();
            jLabel85 = new javax.swing.JLabel();
            btnTorqueXAON = new javax.swing.JButton();
            btnTorqueXAOFF = new javax.swing.JButton();
            jLabel86 = new javax.swing.JLabel();
            txtTorqueXADutyCycle = new javax.swing.JTextField();
            jLabel87 = new javax.swing.JLabel();
            jLabel115 = new javax.swing.JLabel();
            slidTorqueXADutyCycle = new javax.swing.JSlider();
            jLabel117 = new javax.swing.JLabel();
            btnTorqueXASet = new javax.swing.JButton();
            panelTorqueRodY = new javax.swing.JPanel();
            jLabel88 = new javax.swing.JLabel();
            btnTorqueYAON = new javax.swing.JButton();
            btnTorqueYAOFF = new javax.swing.JButton();
            jLabel89 = new javax.swing.JLabel();
            txtTorqueYADutyCycle = new javax.swing.JTextField();
            jLabel90 = new javax.swing.JLabel();
            jLabel118 = new javax.swing.JLabel();
            slidTorqueYADutyCycle = new javax.swing.JSlider();
            jLabel159 = new javax.swing.JLabel();
            btnTorqueYASet = new javax.swing.JButton();
            panelTorqueRodZ = new javax.swing.JPanel();
            jLabel91 = new javax.swing.JLabel();
            btnTorqueZAON = new javax.swing.JButton();
            btnTorqueZAOFF = new javax.swing.JButton();
            jLabel92 = new javax.swing.JLabel();
            txtTorqueZADutyCycle = new javax.swing.JTextField();
            jLabel93 = new javax.swing.JLabel();
            jLabel121 = new javax.swing.JLabel();
            slidTorqueZADutyCycle = new javax.swing.JSlider();
            jLabel158 = new javax.swing.JLabel();
            btnTorqueZASet = new javax.swing.JButton();
            
            setLayout(new java.awt.BorderLayout());
            
            panelACS.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 0));
            
            panelACSPower.setLayout(new javax.swing.BoxLayout(panelACSPower, javax.swing.BoxLayout.Y_AXIS));
            
            panelACSPower.setBorder(new javax.swing.border.TitledBorder("ACS Unit"));
            panelACSPower.setPreferredSize(new java.awt.Dimension(180, 90));
            lblACSActivationMode.setText("Prime Commands");
            lblACSActivationMode.setForeground(java.awt.Color.yellow);
            lblACSActivationMode.setBackground(java.awt.Color.gray);
            lblACSActivationMode.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            lblACSActivationMode.setFont(new java.awt.Font("Verdana", 2, 12));
            lblACSActivationMode.setBorder(new javax.swing.border.LineBorder(java.awt.Color.black));
            lblACSActivationMode.setAlignmentX(0.5F);
            lblACSActivationMode.setMaximumSize(new java.awt.Dimension(1000, 21));
            lblACSActivationMode.setOpaque(true);
            panelACSPower.add(lblACSActivationMode);
            
            jPanel185.setBorder(new javax.swing.border.LineBorder(java.awt.Color.black));
              jPanel185.setPreferredSize(new java.awt.Dimension(10, 45));
              btnACSON.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ca/gc/space/quicksat/ground/images/led_white.gif")));
              btnACSON.setText("ON");
              btnACSON.setPreferredSize(new java.awt.Dimension(59, 29));
              btnACSON.setMaximumSize(new java.awt.Dimension(77, 29));
              btnACSON.setMargin(new java.awt.Insets(2, 5, 2, 5));
              btnACSON.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                      btnACSONActionPerformed(evt);
                  }
              });
              
              jPanel185.add(btnACSON);
              
              btnACSOFF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ca/gc/space/quicksat/ground/images/led_white.gif")));
              btnACSOFF.setText("OFF");
              btnACSOFF.setMargin(new java.awt.Insets(2, 5, 2, 5));
              btnACSOFF.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                      btnACSOFFActionPerformed(evt);
                  }
              });
              
              jPanel185.add(btnACSOFF);
              
              panelACSPower.add(jPanel185);
            
            panelACS.add(panelACSPower);
          
          panelWheel.setLayout(new javax.swing.BoxLayout(panelWheel, javax.swing.BoxLayout.Y_AXIS));
                
                panelWheel.setBorder(new javax.swing.border.TitledBorder("Momentum Wheel Control"));
                panelWheel.setPreferredSize(new java.awt.Dimension(585, 99));
                jPanel210.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));
                
                jPanel250.setPreferredSize(new java.awt.Dimension(100, 70));
                jPanel250.setMinimumSize(new java.awt.Dimension(90, 39));
                btnWheelEnable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ca/gc/space/quicksat/ground/images/led_white.gif")));
                btnWheelEnable.setText("Enable");
                btnWheelEnable.setMargin(new java.awt.Insets(2, 5, 2, 5));
                btnWheelEnable.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        btnWheelEnableActionPerformed(evt);
                    }
                });
                
                jPanel250.add(btnWheelEnable);
                
                btnWheelDisable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ca/gc/space/quicksat/ground/images/led_white.gif")));
                btnWheelDisable.setText("Disable");
                btnWheelDisable.setMargin(new java.awt.Insets(2, 5, 2, 5));
                btnWheelDisable.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        btnWheelDisableActionPerformed(evt);
                    }
                });
                
                jPanel250.add(btnWheelDisable);
                
                jPanel210.add(jPanel250);
              
              jPanel251.setLayout(new javax.swing.BoxLayout(jPanel251, javax.swing.BoxLayout.Y_AXIS));
                  
                  jPanel211.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 5, 0));
                  
                  jPanel211.setBorder(new javax.swing.border.LineBorder(java.awt.Color.black));
                  jPanel211.setPreferredSize(new java.awt.Dimension(425, 36));
                  jPanel211.setMaximumSize(new java.awt.Dimension(450, 32767));
                  jLabel122.setText(" SPEED ");
                  jLabel122.setForeground(java.awt.Color.white);
                  jLabel122.setBackground(java.awt.Color.darkGray);
                  jLabel122.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                  jLabel122.setFont(new java.awt.Font("Arial", 1, 12));
                  jLabel122.setPreferredSize(new java.awt.Dimension(77, 21));
                  jLabel122.setMinimumSize(new java.awt.Dimension(77, 21));
                  jLabel122.setMaximumSize(new java.awt.Dimension(1000, 21));
                  jLabel122.setOpaque(true);
                  jPanel211.add(jLabel122);
                  
                  txtWheelSpeed.setPreferredSize(new java.awt.Dimension(50, 20));
                  txtWheelSpeed.setMinimumSize(new java.awt.Dimension(50, 20));
                  txtWheelSpeed.addKeyListener(new java.awt.event.KeyAdapter() {
                      public void keyReleased(java.awt.event.KeyEvent evt) {
                          txtWheelSpeedKeyReleased(evt);
                      }
                  });
                  
                  jPanel211.add(txtWheelSpeed);
                  
                  jLabel124.setText("RPM ");
                  jPanel211.add(jLabel124);
                  
                  jSeparator14.setOrientation(javax.swing.SwingConstants.VERTICAL);
                  jSeparator14.setPreferredSize(new java.awt.Dimension(2, 32));
                  jPanel211.add(jSeparator14);
                  
                  slidWheelSpeed.setPaintLabels(true);
                  slidWheelSpeed.setMinimum(-100);
                  slidWheelSpeed.setMajorTickSpacing(50);
                  slidWheelSpeed.setValue(0);
                  slidWheelSpeed.setPreferredSize(new java.awt.Dimension(150, 32));
                  txtWheelSpeed.setText("0");
                  slidWheelSpeed.addChangeListener(new javax.swing.event.ChangeListener() {
                      public void stateChanged(javax.swing.event.ChangeEvent evt) {
                          slidWheelSpeedStateChanged(evt);
                      }
                  });
                  
                  jPanel211.add(slidWheelSpeed);
                  
                  jLabel171.setText("%");
                  jPanel211.add(jLabel171);
                  
                  jSeparator15.setOrientation(javax.swing.SwingConstants.VERTICAL);
                  jSeparator15.setPreferredSize(new java.awt.Dimension(2, 32));
                  jPanel211.add(jSeparator15);
                  
                  btnWheelSpeed.setText("SET");
                  btnWheelSpeed.addActionListener(new java.awt.event.ActionListener() {
                      public void actionPerformed(java.awt.event.ActionEvent evt) {
                          btnWheelSpeedActionPerformed(evt);
                      }
                  });
                  
                  jPanel211.add(btnWheelSpeed);
                  
                  jPanel251.add(jPanel211);
                
                jPanel212.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 5, 0));
                  
                  jPanel212.setBorder(new javax.swing.border.LineBorder(java.awt.Color.black));
                  jPanel212.setPreferredSize(new java.awt.Dimension(425, 36));
                  jPanel212.setMaximumSize(new java.awt.Dimension(450, 32767));
                  jLabel123.setText(" TORQUE ");
                  jLabel123.setForeground(java.awt.Color.white);
                  jLabel123.setBackground(java.awt.Color.darkGray);
                  jLabel123.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                  jLabel123.setFont(new java.awt.Font("Arial", 1, 12));
                  jLabel123.setPreferredSize(new java.awt.Dimension(77, 21));
                  jLabel123.setMaximumSize(new java.awt.Dimension(1000, 21));
                  jLabel123.setOpaque(true);
                  jPanel212.add(jLabel123);
                  
                  txtWheelTorque.setPreferredSize(new java.awt.Dimension(50, 20));
                  txtWheelTorque.setMinimumSize(new java.awt.Dimension(50, 20));
                  txtWheelTorque.addKeyListener(new java.awt.event.KeyAdapter() {
                      public void keyReleased(java.awt.event.KeyEvent evt) {
                          txtWheelTorqueKeyReleased(evt);
                      }
                  });
                  
                  jPanel212.add(txtWheelTorque);
                  
                  jLabel125.setText("oz-in");
                  jPanel212.add(jLabel125);
                  
                  jSeparator16.setOrientation(javax.swing.SwingConstants.VERTICAL);
                  jSeparator16.setPreferredSize(new java.awt.Dimension(2, 32));
                  jPanel212.add(jSeparator16);
                  
                  slidWheelTorque.setMinorTickSpacing(50);
                  slidWheelTorque.setPaintLabels(true);
                  slidWheelTorque.setMinimum(-100);
                  slidWheelTorque.setMajorTickSpacing(50);
                  slidWheelTorque.setValue(0);
                  slidWheelTorque.setPreferredSize(new java.awt.Dimension(150, 32));
                  txtWheelTorque.setText("0");
                  slidWheelTorque.addChangeListener(new javax.swing.event.ChangeListener() {
                      public void stateChanged(javax.swing.event.ChangeEvent evt) {
                          slidWheelTorqueStateChanged(evt);
                      }
                  });
                  
                  jPanel212.add(slidWheelTorque);
                  
                  jLabel172.setText("%");
                  jPanel212.add(jLabel172);
                  
                  jSeparator17.setOrientation(javax.swing.SwingConstants.VERTICAL);
                  jSeparator17.setPreferredSize(new java.awt.Dimension(2, 32));
                  jPanel212.add(jSeparator17);
                  
                  btnWheelTorque.setText("SET");
                  btnWheelTorque.addActionListener(new java.awt.event.ActionListener() {
                      public void actionPerformed(java.awt.event.ActionEvent evt) {
                          btnWheelTorqueActionPerformed(evt);
                      }
                  });
                  
                  jPanel212.add(btnWheelTorque);
                  
                  jPanel251.add(jPanel212);
                
                jPanel210.add(jPanel251);
              
              panelWheel.add(jPanel210);
            
            panelACS.add(panelWheel);
          
          panelTorqueRods.setLayout(new javax.swing.BoxLayout(panelTorqueRods, javax.swing.BoxLayout.Y_AXIS));
              
              panelTorqueRods.setBorder(new javax.swing.border.TitledBorder("Magnetic Torque Rods Control"));
              panelTorqueRods.setPreferredSize(new java.awt.Dimension(675, 129));
              panelTorqueRodX.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 5, 0));
              
              panelTorqueRodX.setBorder(new javax.swing.border.LineBorder(java.awt.Color.black));
              panelTorqueRodX.setPreferredSize(new java.awt.Dimension(600, 31));
              panelTorqueRodX.setMinimumSize(new java.awt.Dimension(420, 30));
              jLabel85.setText(" X ");
              jLabel85.setForeground(java.awt.Color.white);
              jLabel85.setBackground(java.awt.Color.darkGray);
              jLabel85.setFont(new java.awt.Font("Arial Black", 0, 14));
              jLabel85.setOpaque(true);
              panelTorqueRodX.add(jLabel85);
              
              btnTorqueXAON.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ca/gc/space/quicksat/ground/images/led_white.gif")));
              btnTorqueXAON.setText("ON");
              btnTorqueXAON.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                      btnTorqueXAONActionPerformed(evt);
                  }
              });
              
              panelTorqueRodX.add(btnTorqueXAON);
              
              btnTorqueXAOFF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ca/gc/space/quicksat/ground/images/led_white.gif")));
              btnTorqueXAOFF.setText("OFF");
              btnTorqueXAOFF.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                      btnTorqueXAOFFActionPerformed(evt);
                  }
              });
              
              panelTorqueRodX.add(btnTorqueXAOFF);
              
              jLabel86.setText("Duty Cycle:");
              panelTorqueRodX.add(jLabel86);
              
              txtTorqueXADutyCycle.setPreferredSize(new java.awt.Dimension(50, 20));
              txtTorqueXADutyCycle.setMinimumSize(new java.awt.Dimension(50, 20));
              txtTorqueXADutyCycle.addKeyListener(new java.awt.event.KeyAdapter() {
                  public void keyReleased(java.awt.event.KeyEvent evt) {
                      txtTorqueXADutyCycleKeyReleased(evt);
                  }
              });
              
              panelTorqueRodX.add(txtTorqueXADutyCycle);
              
              jLabel87.setText("%");
              panelTorqueRodX.add(jLabel87);
              
              jLabel115.setText("0");
              panelTorqueRodX.add(jLabel115);
              
              slidTorqueXADutyCycle.setMajorTickSpacing(10);
              txtTorqueXADutyCycle.setText(""+slidTorqueXADutyCycle.getValue());
              slidTorqueXADutyCycle.addChangeListener(new javax.swing.event.ChangeListener() {
                  public void stateChanged(javax.swing.event.ChangeEvent evt) {
                      slidTorqueXADutyCycleStateChanged(evt);
                  }
              });
              
              panelTorqueRodX.add(slidTorqueXADutyCycle);
              
              jLabel117.setText("100%");
              panelTorqueRodX.add(jLabel117);
              
              btnTorqueXASet.setText("SET");
              btnTorqueXASet.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                      btnTorqueXASetActionPerformed(evt);
                  }
              });
              
              panelTorqueRodX.add(btnTorqueXASet);
              
              panelTorqueRods.add(panelTorqueRodX);
            
            panelTorqueRodY.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 5, 0));
              
              panelTorqueRodY.setBorder(new javax.swing.border.LineBorder(java.awt.Color.black));
              panelTorqueRodY.setPreferredSize(new java.awt.Dimension(615, 31));
              jLabel88.setText(" Y ");
              jLabel88.setForeground(java.awt.Color.white);
              jLabel88.setBackground(java.awt.Color.darkGray);
              jLabel88.setFont(new java.awt.Font("Arial Black", 0, 14));
              jLabel88.setOpaque(true);
              panelTorqueRodY.add(jLabel88);
              
              btnTorqueYAON.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ca/gc/space/quicksat/ground/images/led_white.gif")));
              btnTorqueYAON.setText("ON");
              btnTorqueYAON.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                      btnTorqueYAONActionPerformed(evt);
                  }
              });
              
              panelTorqueRodY.add(btnTorqueYAON);
              
              btnTorqueYAOFF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ca/gc/space/quicksat/ground/images/led_white.gif")));
              btnTorqueYAOFF.setText("OFF");
              btnTorqueYAOFF.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                      btnTorqueYAOFFActionPerformed(evt);
                  }
              });
              
              panelTorqueRodY.add(btnTorqueYAOFF);
              
              jLabel89.setText("Duty Cycle:");
              panelTorqueRodY.add(jLabel89);
              
              txtTorqueYADutyCycle.setPreferredSize(new java.awt.Dimension(50, 20));
              txtTorqueYADutyCycle.setMinimumSize(new java.awt.Dimension(50, 20));
              txtTorqueYADutyCycle.addKeyListener(new java.awt.event.KeyAdapter() {
                  public void keyReleased(java.awt.event.KeyEvent evt) {
                      txtTorqueYADutyCycleKeyReleased(evt);
                  }
              });
              
              panelTorqueRodY.add(txtTorqueYADutyCycle);
              
              jLabel90.setText("%");
              panelTorqueRodY.add(jLabel90);
              
              jLabel118.setText("0");
              panelTorqueRodY.add(jLabel118);
              
              slidTorqueYADutyCycle.setMajorTickSpacing(10);
              txtTorqueYADutyCycle.setText(""+slidTorqueYADutyCycle.getValue());
              slidTorqueYADutyCycle.addChangeListener(new javax.swing.event.ChangeListener() {
                  public void stateChanged(javax.swing.event.ChangeEvent evt) {
                      slidTorqueYADutyCycleStateChanged(evt);
                  }
              });
              
              panelTorqueRodY.add(slidTorqueYADutyCycle);
              
              jLabel159.setText("100%");
              panelTorqueRodY.add(jLabel159);
              
              btnTorqueYASet.setText("SET");
              btnTorqueYASet.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                      btnTorqueYASetActionPerformed(evt);
                  }
              });
              
              panelTorqueRodY.add(btnTorqueYASet);
              
              panelTorqueRods.add(panelTorqueRodY);
            
            panelTorqueRodZ.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 5, 0));
              
              panelTorqueRodZ.setBorder(new javax.swing.border.LineBorder(java.awt.Color.black));
              panelTorqueRodZ.setPreferredSize(new java.awt.Dimension(615, 31));
              jLabel91.setText(" Z ");
              jLabel91.setForeground(java.awt.Color.white);
              jLabel91.setBackground(java.awt.Color.darkGray);
              jLabel91.setFont(new java.awt.Font("Arial Black", 0, 14));
              jLabel91.setOpaque(true);
              panelTorqueRodZ.add(jLabel91);
              
              btnTorqueZAON.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ca/gc/space/quicksat/ground/images/led_white.gif")));
              btnTorqueZAON.setText("ON");
              btnTorqueZAON.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                      btnTorqueZAONActionPerformed(evt);
                  }
              });
              
              panelTorqueRodZ.add(btnTorqueZAON);
              
              btnTorqueZAOFF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ca/gc/space/quicksat/ground/images/led_white.gif")));
              btnTorqueZAOFF.setText("OFF");
              btnTorqueZAOFF.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                      btnTorqueZAOFFActionPerformed(evt);
                  }
              });
              
              panelTorqueRodZ.add(btnTorqueZAOFF);
              
              jLabel92.setText("Duty Cycle:");
              panelTorqueRodZ.add(jLabel92);
              
              txtTorqueZADutyCycle.setPreferredSize(new java.awt.Dimension(50, 20));
              txtTorqueZADutyCycle.setMinimumSize(new java.awt.Dimension(50, 20));
              txtTorqueZADutyCycle.addKeyListener(new java.awt.event.KeyAdapter() {
                  public void keyReleased(java.awt.event.KeyEvent evt) {
                      txtTorqueZADutyCycleKeyReleased(evt);
                  }
              });
              
              panelTorqueRodZ.add(txtTorqueZADutyCycle);
              
              jLabel93.setText("%");
              panelTorqueRodZ.add(jLabel93);
              
              jLabel121.setText("0");
              panelTorqueRodZ.add(jLabel121);
              
              slidTorqueZADutyCycle.setMajorTickSpacing(10);
              txtTorqueZADutyCycle.setText(""+slidTorqueZADutyCycle.getValue());
              slidTorqueZADutyCycle.addChangeListener(new javax.swing.event.ChangeListener() {
                  public void stateChanged(javax.swing.event.ChangeEvent evt) {
                      slidTorqueZADutyCycleStateChanged(evt);
                  }
              });
              
              panelTorqueRodZ.add(slidTorqueZADutyCycle);
              
              jLabel158.setText("100%");
              panelTorqueRodZ.add(jLabel158);
              
              btnTorqueZASet.setText("SET");
              btnTorqueZASet.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                      btnTorqueZASetActionPerformed(evt);
                  }
              });
              
              panelTorqueRodZ.add(btnTorqueZASet);
              
              panelTorqueRods.add(panelTorqueRodZ);
            
            panelACS.add(panelTorqueRods);
          
          add(panelACS, java.awt.BorderLayout.CENTER);
        
    }//GEN-END:initComponents

    private void btnTorqueZASetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTorqueZASetActionPerformed
        int value;

        /*---------------------------*/
        /* Ge the value (percentage) */
        /*---------------------------*/
        try{
          value = Integer.parseInt(txtTorqueZADutyCycle.getText());
        } catch( NumberFormatException nfe ) { value = 0; }
        if( value > 100 ) value = 100;
        if( value < 0 ) value = 0;
        txtTorqueZADutyCycle.setText(""+value);

        /*--------------------------------------------------------------------*/
        /* Translate it into the 0x000-0xFFF range, and then send the command */
        /*--------------------------------------------------------------------*/
        value = (int)((4095 * value) / 100);
        
        SatControl ctrl = sat.getControl();
        if( (ctrl==null) || (srvLnk==null) ) return;
        srvLnk.sendPacketToSpacecraft(
                            ctrl.messageToSetTorqueRodPower("Z",1,value) );
        //phtLink.sendPacket( PHT.dataPacket( PHT.cmdTorqueRodZA_DutyCycle, value ) );

    }//GEN-LAST:event_btnTorqueZASetActionPerformed

    private void slidTorqueZADutyCycleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slidTorqueZADutyCycleStateChanged
      txtTorqueZADutyCycle.setText(""+slidTorqueZADutyCycle.getValue());
    }//GEN-LAST:event_slidTorqueZADutyCycleStateChanged

    private void txtTorqueZADutyCycleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTorqueZADutyCycleKeyReleased
      try {
          slidTorqueZADutyCycle.setValue( Integer.parseInt(txtTorqueZADutyCycle.getText()) );
      }catch( NumberFormatException nfe ) {
          slidTorqueZADutyCycle.setValue( 0 );
      }
    }//GEN-LAST:event_txtTorqueZADutyCycleKeyReleased

    private void btnTorqueYASetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTorqueYASetActionPerformed
      int value;

    /*---------------------------*/
    /* Ge the value (percentage) */
    /*---------------------------*/
      try{
          value = Integer.parseInt(txtTorqueYADutyCycle.getText());
      } catch( NumberFormatException nfe ) { value = 0; }
      if( value > 100 ) value = 100;
      if( value < 0 ) value = 0;
      txtTorqueYADutyCycle.setText(""+value);

    /*--------------------------------------------------------------------*/
    /* Translate it into the 0x000-0xFFF range, and then send the command */
    /*--------------------------------------------------------------------*/
      value = (int)((4095 * value) / 100);

      SatControl ctrl = sat.getControl();
      if( (ctrl==null) || (srvLnk==null) ) return;
      srvLnk.sendPacketToSpacecraft(
                            ctrl.messageToSetTorqueRodPower("Y",1,value) );
      
      //phtLink.sendPacket( PHT.dataPacket( PHT.cmdTorqueRodYA_DutyCycle, value ) );
    }//GEN-LAST:event_btnTorqueYASetActionPerformed

    private void slidTorqueYADutyCycleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slidTorqueYADutyCycleStateChanged
      txtTorqueYADutyCycle.setText(""+slidTorqueYADutyCycle.getValue());
    }//GEN-LAST:event_slidTorqueYADutyCycleStateChanged

    private void txtTorqueYADutyCycleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTorqueYADutyCycleKeyReleased
      try {
          slidTorqueYADutyCycle.setValue( Integer.parseInt(txtTorqueYADutyCycle.getText()) );
      }catch( NumberFormatException nfe ) {
          slidTorqueYADutyCycle.setValue( 0 );
      }
    }//GEN-LAST:event_txtTorqueYADutyCycleKeyReleased

    private void btnTorqueXASetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTorqueXASetActionPerformed
      int value;

    /*---------------------------*/
    /* Ge the value (percentage) */
    /*---------------------------*/
      try{
          value = Integer.parseInt(txtTorqueXADutyCycle.getText());
      } catch( NumberFormatException nfe ) { value = 0; }
      if( value > 100 ) value = 100;
      if( value < 0 ) value = 0;
      txtTorqueXADutyCycle.setText(""+value);

    /*--------------------------------------------------------------------*/
    /* Translate it into the 0x000-0xFFF range, and then send the command */
    /*--------------------------------------------------------------------*/
      value = (int)((4095 * value) / 100);
      
      SatControl ctrl = sat.getControl();
      if( (ctrl==null) || (srvLnk==null) ) return;
      srvLnk.sendPacketToSpacecraft(
                            ctrl.messageToSetTorqueRodPower("X",1,value) );
        
      //phtLink.sendPacket( PHT.dataPacket( PHT.cmdTorqueRodXA_DutyCycle, value ) );

    }//GEN-LAST:event_btnTorqueXASetActionPerformed

    private void slidTorqueXADutyCycleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slidTorqueXADutyCycleStateChanged
      txtTorqueXADutyCycle.setText(""+slidTorqueXADutyCycle.getValue());
    }//GEN-LAST:event_slidTorqueXADutyCycleStateChanged

    private void txtTorqueXADutyCycleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTorqueXADutyCycleKeyReleased
      try {
          slidTorqueXADutyCycle.setValue( Integer.parseInt(txtTorqueXADutyCycle.getText()) );
      }catch( NumberFormatException nfe ) {
          slidTorqueXADutyCycle.setValue( 0 );
      }
    }//GEN-LAST:event_txtTorqueXADutyCycleKeyReleased

    private void btnTorqueYAOFFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTorqueYAOFFActionPerformed
        showButtonNeutral( btnTorqueYAON );        
        SatControl ctrl = sat.getControl();
        if( (ctrl==null) || (srvLnk==null) ) return;
        srvLnk.sendPacketToSpacecraft(ctrl.messageToTurnTorqueRodOFF("Y",1) );
    }//GEN-LAST:event_btnTorqueYAOFFActionPerformed

    private void btnTorqueZAOFFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTorqueZAOFFActionPerformed
        showButtonNeutral( btnTorqueZAON );
        SatControl ctrl = sat.getControl();
        if( (ctrl==null) || (srvLnk==null) ) return;
        srvLnk.sendPacketToSpacecraft(ctrl.messageToTurnTorqueRodOFF("Z",1) );
    }//GEN-LAST:event_btnTorqueZAOFFActionPerformed

    private void btnTorqueXAOFFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTorqueXAOFFActionPerformed
        showButtonNeutral( btnTorqueXAON );        
        SatControl ctrl = sat.getControl();
        if( (ctrl==null) || (srvLnk==null) ) return;
        srvLnk.sendPacketToSpacecraft(ctrl.messageToTurnTorqueRodOFF("X",1) );
    }//GEN-LAST:event_btnTorqueXAOFFActionPerformed

    private void btnTorqueYAONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTorqueYAONActionPerformed
        showButtonNeutral( btnTorqueYAOFF );
        SatControl ctrl = sat.getControl();
        if( (ctrl==null) || (srvLnk==null) ) return;
        srvLnk.sendPacketToSpacecraft(ctrl.messageToTurnTorqueRodON("Y",1) );
    }//GEN-LAST:event_btnTorqueYAONActionPerformed

    private void btnTorqueZAONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTorqueZAONActionPerformed
        showButtonNeutral( btnTorqueZAOFF );        
        SatControl ctrl = sat.getControl();
        if( (ctrl==null) || (srvLnk==null) ) return;
        srvLnk.sendPacketToSpacecraft(ctrl.messageToTurnTorqueRodON("Z",1) );        
    }//GEN-LAST:event_btnTorqueZAONActionPerformed

    private void btnTorqueXAONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTorqueXAONActionPerformed
        showButtonNeutral( btnTorqueXAOFF );
        SatControl ctrl = sat.getControl();
        if( (ctrl==null) || (srvLnk==null) ) return;
        srvLnk.sendPacketToSpacecraft(ctrl.messageToTurnTorqueRodON("X",1) );
    }//GEN-LAST:event_btnTorqueXAONActionPerformed

    private void btnWheelTorqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWheelTorqueActionPerformed
        SatControl ctrl = sat.getControl();
        if( (ctrl==null) || (srvLnk==null) ) return;
        srvLnk.sendPacketToSpacecraft(
                        ctrl.messageToSetMomentumWheelTorque(
                            (int)ReactionWheel.calcCodeFromTorque(Float.parseFloat(txtWheelTorque.getText()))
                        ) );
    }//GEN-LAST:event_btnWheelTorqueActionPerformed

    private void slidWheelTorqueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slidWheelTorqueStateChanged
      if( !justEditedWheelTorque ) {
          String txtTorque = Float.toString( ReactionWheel.calcTorqueFromPercent(slidWheelTorque.getValue()) );
          if( (txtTorque.length() - txtTorque.indexOf(".") > 3) && (txtTorque.indexOf(".")>=0) ) {
              txtTorque = txtTorque.substring(0,txtTorque.indexOf(".")+4);
          }
        txtWheelTorque.setText( txtTorque );
      }
      justEditedWheelTorque = false;
    }//GEN-LAST:event_slidWheelTorqueStateChanged

    private void txtWheelTorqueKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWheelTorqueKeyReleased
      justEditedWheelTorque = true;
      try{
        slidWheelTorque.setValue( (int) ReactionWheel.calcPercentFromTorque( Float.parseFloat(txtWheelTorque.getText()) ) );
      } catch( NumberFormatException nfe ) { slidWheelTorque.setValue(0); }
    }//GEN-LAST:event_txtWheelTorqueKeyReleased

    private void btnWheelSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWheelSpeedActionPerformed
        SatControl ctrl = sat.getControl();
        if( (ctrl==null) || (srvLnk==null) ) return;
        srvLnk.sendPacketToSpacecraft(
                        ctrl.messageToSetMomentumWheelSpeed(
                            (int)ReactionWheel.calcCodeFromSpeed(Float.parseFloat(txtWheelSpeed.getText()))
                        ) );
    }//GEN-LAST:event_btnWheelSpeedActionPerformed

    private void slidWheelSpeedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slidWheelSpeedStateChanged
      if( !justEditedWheelSpeed ) {
        txtWheelSpeed.setText( ""+ReactionWheel.calcSpeedFromPercent(slidWheelSpeed.getValue()) );
      }
      justEditedWheelSpeed = false;
    }//GEN-LAST:event_slidWheelSpeedStateChanged

    private void txtWheelSpeedKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWheelSpeedKeyReleased
      justEditedWheelSpeed = true;
      try{
        slidWheelSpeed.setValue( (int) ReactionWheel.calcPercentFromSpeed( Float.parseFloat(txtWheelSpeed.getText()) ) );
      } catch( NumberFormatException nfe ) { slidWheelSpeed.setValue(0); }
    }//GEN-LAST:event_txtWheelSpeedKeyReleased

    private void btnWheelDisableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWheelDisableActionPerformed
      showButtonNeutral( btnWheelEnable );
      SatControl ctrl = sat.getControl();
      if( (ctrl==null) || (srvLnk==null) ) return;
      srvLnk.sendPacketToSpacecraft(ctrl.messageToDisableMomentumWheel() );      
    }//GEN-LAST:event_btnWheelDisableActionPerformed

    private void btnWheelEnableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWheelEnableActionPerformed
      showButtonNeutral( btnWheelDisable );
      SatControl ctrl = sat.getControl();
      if( (ctrl==null) || (srvLnk==null) ) return;
      srvLnk.sendPacketToSpacecraft(ctrl.messageToEnableMomentumWheel() );
    }//GEN-LAST:event_btnWheelEnableActionPerformed

    private void btnACSOFFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnACSOFFActionPerformed
      showButtonNeutral( btnACSON );
      SatControl ctrl = sat.getControl();
      if( (ctrl==null) || (srvLnk==null) ) return;
      srvLnk.sendPacketToSpacecraft(ctrl.messageToTurnACSOFF() );
    }//GEN-LAST:event_btnACSOFFActionPerformed

    private void btnACSONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnACSONActionPerformed
      showButtonNeutral( btnACSOFF );
      SatControl ctrl = sat.getControl();
      if( (ctrl==null) || (srvLnk==null) ) return;
      srvLnk.sendPacketToSpacecraft(ctrl.messageToTurnACSON() );
    }//GEN-LAST:event_btnACSONActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panelACS;
    private javax.swing.JPanel panelACSPower;
    private javax.swing.JLabel lblACSActivationMode;
    private javax.swing.JPanel jPanel185;
    public javax.swing.JButton btnACSON;
    public javax.swing.JButton btnACSOFF;
    private javax.swing.JPanel panelWheel;
    private javax.swing.JPanel jPanel210;
    private javax.swing.JPanel jPanel250;
    public javax.swing.JButton btnWheelEnable;
    public javax.swing.JButton btnWheelDisable;
    private javax.swing.JPanel jPanel251;
    private javax.swing.JPanel jPanel211;
    private javax.swing.JLabel jLabel122;
    private javax.swing.JTextField txtWheelSpeed;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSlider slidWheelSpeed;
    private javax.swing.JLabel jLabel171;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JButton btnWheelSpeed;
    private javax.swing.JPanel jPanel212;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JTextField txtWheelTorque;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSlider slidWheelTorque;
    private javax.swing.JLabel jLabel172;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JButton btnWheelTorque;
    private javax.swing.JPanel panelTorqueRods;
    private javax.swing.JPanel panelTorqueRodX;
    private javax.swing.JLabel jLabel85;
    public javax.swing.JButton btnTorqueXAON;
    public javax.swing.JButton btnTorqueXAOFF;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JTextField txtTorqueXADutyCycle;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JSlider slidTorqueXADutyCycle;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JButton btnTorqueXASet;
    private javax.swing.JPanel panelTorqueRodY;
    private javax.swing.JLabel jLabel88;
    public javax.swing.JButton btnTorqueYAON;
    public javax.swing.JButton btnTorqueYAOFF;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JTextField txtTorqueYADutyCycle;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JSlider slidTorqueYADutyCycle;
    private javax.swing.JLabel jLabel159;
    private javax.swing.JButton btnTorqueYASet;
    private javax.swing.JPanel panelTorqueRodZ;
    private javax.swing.JLabel jLabel91;
    public javax.swing.JButton btnTorqueZAON;
    public javax.swing.JButton btnTorqueZAOFF;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JTextField txtTorqueZADutyCycle;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JSlider slidTorqueZADutyCycle;
    private javax.swing.JLabel jLabel158;
    private javax.swing.JButton btnTorqueZASet;
    // End of variables declaration//GEN-END:variables

    /*------------------------------------------------------------------------*/
    /** Change the appearance of the button so that user knows that the
     *  function associated with this button is not known, but will be as soon
     *  as we receive telemetry information.
     *  @param button The swing button.                                       */
    /*------------------------------------------------------------------------*/
    public void showButtonInactive( JButton button ) {
    /*------------------------------------------------------------------------*/
     button.setIcon(
       new javax.swing.ImageIcon(
        getClass().getResource(LED_OFF)));
    }
    
    /*------------------------------------------------------------------------*/
    /** Change the appearance of the button so that user knows that the
     *  function associated with this button is "active" or "on".
     *  @param button The swing button.                                       */
    /*------------------------------------------------------------------------*/
    public void showButtonActiveON( JButton button ) {
    /*------------------------------------------------------------------------*/
     button.setIcon(
       new javax.swing.ImageIcon(
        getClass().getResource(LED_GREEN_ON)));
    }
    
    /*------------------------------------------------------------------------*/
    /** Change the appearance of the button so that user knows that the
     *  function associated with this button is "inactive" or "off".
     *  @param button The swing button.                                       */
    /*------------------------------------------------------------------------*/
    public void showButtonActiveOFF( JButton button ) {
    /*------------------------------------------------------------------------*/
     button.setIcon(
       new javax.swing.ImageIcon(
        getClass().getResource(LED_RED_ON)));
    }
    
    /*------------------------------------------------------------------------*/
    /** Change the appearance of the button so that user knows that the
     *  state of the function associated with this button is unknown.
     *  @param button The swing button.                                       */
    /*------------------------------------------------------------------------*/
    public void showButtonNeutral( JButton button ) {
    /*------------------------------------------------------------------------*/
     button.setIcon(
       new javax.swing.ImageIcon(
        getClass().getResource(LED_WHITE)));
    }
}
